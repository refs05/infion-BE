name: on-push-main

on:
    pull_request:
        branches:
            - "main"
    push:
        branches:
            - "main"
            - "feature-*"
            - "hotfix-*"
            - "bug-*"
            - "test-*"

jobs:
    unit-test:
        name: api test - run unitest on action
        runs-on: ubuntu-latest
        container: golang:1.17
        services:
            mysql:
                image: mariadb:10.1
                env:
                    MYSQL_ROOT_PASSWORD: password
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        strategy:
            matrix:
                go: ["1.17"]
        steps:
            - name: "Git Checkout"
              uses: actions/checkout@v2
            - name: create database
              run: |
                  apt-get update
                  apt-get install -y mariadb-client
                  mysql --host mysql -uroot -ppassword -e "CREATE DATABASE IF NOT EXISTS infion"
            - name: running unitest
              run: |
                  echo "${{ secrets.ENV }}" > ./app/config/config.json
                  # mv ./app/config/example-config.json ./app/config/config.json
                  go test ./... -cover -failfast
    build-push-docker:
        name: "build image and push registry dockerhub"
        runs-on: ubuntu-latest
        needs: unit-test
        steps:
            - uses: actions/checkout@v2
            - name: build image
              run: docker build -t waldofx/infion:latest .
            - name: login dockerhub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: push image to dockerhub
              run: docker push waldofx/infion:latest
#   deployment:
#     name: "deploy to ec2"
#     runs-on: ubuntu-latest
#     needs: build-push-docker
#     steps:
#       - uses: actions/checkout@v2
#       - name: configure ssh
#         env:
#           SSH_USER: ${{ secrets.SSH_USERNAME }}
#           SSH_KEY: ${{ secrets.INVOICEIN_PEM }}
#           SSH_HOST: ${{ secrets.SSH_HOST }}
#         run: |
#           mkdir -p ~/.ssh/
#           echo "$SSH_KEY" > ~/.ssh/invoicein.pem
#           chmod 700 ~/.ssh/invoicein.pem
#           cat >> ~/.ssh/config << END
#           Host development
#             HostName $SSH_HOST
#             User $SSH_USER
#             IdentityFile ~/.ssh/invoicein.pem
#             StrictHostKeyChecking=no
#           END
#       - name: connect ec2, remove container, pull from registry, end start
#         run: ssh development 'docker rm -f $(docker ps -a -q)' || true && docker pull waldofx/infion:latest && docker run -d -p 8080:8080 --name infion waldofx/infion:latest
